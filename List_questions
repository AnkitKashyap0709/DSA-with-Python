# Q1. Find the only odd element.

# Naive approach:
# Time: O(2n) or O(n), Space: O(n) when in worst case all the elements in dictionary are unique.

'''def tr(a):
  d = {}
  for i in a:
    if i in d:
      d[i] = d.get(i) + 1
    else:
      d[i] = 1
  for i in d:
    if d.get(i) % 2 != 0:
      return i

a = [10,20,30,20,10]
print(tr(a))'''

# Optimal approach:

# Time: O(n), Space: O(1)

'''a = [10,20,30,20,10]
result = 0
for i in a:
    result = result ^ i
print(result)'''


# Q2. Next greater element 1. Leetcode - 496.

# Naive approach:

# Time: O(len(a) * len(b)), Space: O(len(a))

'''a, b, c = [4,1,2], [1,3,4,2], []
for i in a:
  if i in b:
    x = b.index(i)
    d = -1
    for i in range(x + 1, len(b)):
      if b[i] > b[x]:
        d = b[i]
        break        
    c.append(d)
        
print(c)'''
